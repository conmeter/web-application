# Generated by Django 3.0.7 on 2020-06-28 06:37

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import posts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head', models.CharField(max_length=50, verbose_name='NOTIFICATION HEAD')),
                ('body', models.CharField(max_length=250, verbose_name='NOTIFICATION BODY')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_text', models.TextField(blank=True, help_text='Describe how you felt about the website', null=True, verbose_name='Feedback')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('design_rating', models.IntegerField(help_text='How easy was it to navigate the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='DESIGN RATING')),
                ('ui_rating', models.IntegerField(help_text='How modern looking was the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='USER INTERFACE RATING')),
                ('speed_rating', models.IntegerField(help_text='How responsive was the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='RESPONSIVENESS RATING')),
                ('qoc_rating', models.IntegerField(help_text='How was the quality of content on the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='QOC RATING')),
                ('reliability_rating', models.IntegerField(help_text='Rate the availability of the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='RELIABILITY RATING')),
                ('compatibility_rating', models.IntegerField(help_text='How compatible was the website with all your devices', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='COMPATABILITY RATING')),
                ('support_rating', models.IntegerField(help_text='How good was the customer support', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='SUPPORT RATING')),
                ('trust_rating', models.IntegerField(help_text='How trustworthy is the website', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='TRUST RATING')),
                ('total_rating_value', models.FloatField()),
                ('rating_count', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images', validators=[posts.models.validate_image], verbose_name='Image')),
            ],
        ),
    ]
